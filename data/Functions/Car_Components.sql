CREATE OR ALTER FUNCTION dbo.GET_IDCOMPONENT(@ID_GARA CHAR(10), @NAME_COM NVARCHAR(100), @WAGE MONEY, @CUR_PRICE MONEY)
RETURNS CHAR(10)
AS
BEGIN
	DECLARE @ID_COM CHAR(10)
	SELECT @ID_COM = CC.ID_COM
	FROM CAR_COMPONENTS CC, COMPONENT_DETAILS CD
	WHERE
		CC.ID_COM = CD.ID_COM AND
		CD.ID_GARA = @ID_GARA AND
		CC.NAME_COM = @NAME_COM AND
		CD.WAGE = @WAGE AND
		CD.CUR_PRICE = @CUR_PRICE
	RETURN @ID_COM
END
GO

CREATE OR ALTER PROCEDURE USP_GET_IDCOMPONENT
@ID_GARA CHAR(10), @NAME_COM NVARCHAR(100), @WAGE MONEY, @CUR_PRICE MONEY
AS
BEGIN
	SELECT CC.ID_COM
	FROM CAR_COMPONENTS CC, COMPONENT_DETAILS CD
	WHERE
		CC.ID_COM = CD.ID_COM AND
		CD.ID_GARA = @ID_GARA AND
		CC.NAME_COM = @NAME_COM AND
		CD.WAGE = @WAGE AND
		CD.CUR_PRICE = @CUR_PRICE
END
GO

CREATE OR ALTER FUNCTION dbo.GET_MAX_IDCARBRAND()
RETURNS INT
AS
BEGIN
	DECLARE 
		@MAX_IDCARBRAND CHAR(10), 
		@MAX_NUM INT

	IF ((SELECT COUNT(*) FROM GOOD_RECEIVED_NOTES) = 0)
		RETURN 0

	SELECT TOP 1 @MAX_IDCARBRAND = ID_BRAND
	FROM CAR_BRANDS
	ORDER BY CAST(SUBSTRING(ID_BRAND, 3, LEN(ID_BRAND))AS INT) DESC;
	
	DECLARE @SUB_MAX CHAR(10) = SUBSTRING(@MAX_IDCARBRAND, 4, LEN(@MAX_IDCARBRAND))

	SET @MAX_NUM = CAST(@SUB_MAX AS INT)
	RETURN @MAX_NUM
END
GO

CREATE OR ALTER PROC INSERT_CAR_BRANDS
@name NVARCHAR(100), @gara CHAR(10)
AS
BEGIN
	DECLARE @brand CHAR(10)
	IF (SELECT COUNT(*) FROM CAR_BRANDS WHERE NAME_BRAND = @name) = 0
	BEGIN
		DECLARE @MAX_ID SMALLINT
		SET @MAX_ID = dbo.GET_MAX_ID_CARBRAND() + 1
		INSERT CAR_BRANDS VALUES ('BR' + cast(@MAX_ID as char(7)), @name, 0)
		INSERT BRAND_DETAILS VALUES ('BR' + cast(@MAX_ID as char(7)), @gara, 0)
	END
	ELSE IF (SELECT COUNT(*) FROM CAR_BRANDS WHERE NAME_BRAND = @name AND STATUS_BRAND = 1) > 0
	BEGIN
		SELECT @brand = ID_BRAND FROM CAR_BRANDS WHERE NAME_BRAND = @name
		UPDATE CAR_BRANDS
		SET STATUS_BRAND = 0
		WHERE ID_BRAND = @brand
		IF (SELECT COUNT(*) FROM BRAND_DETAILS WHERE ID_BRAND = @brand AND ID_GARA = @gara) = 0
		BEGIN
			INSERT BRAND_DETAILS VALUES (@brand, @gara, 0)
		END
		ELSE IF (SELECT COUNT(*) FROM BRAND_DETAILS WHERE ID_BRAND = @brand AND ID_GARA = @gara AND STATUS_DETAILS = 1) > 0
		BEGIN
			UPDATE BRAND_DETAILS
			SET STATUS_DETAILS = 0
			WHERE ID_BRAND = @brand AND ID_GARA = @gara
		END
	END
	ELSE
	BEGIN
		SELECT @brand = ID_BRAND FROM CAR_BRANDS WHERE NAME_BRAND = @name 
		IF (SELECT COUNT(*) FROM BRAND_DETAILS WHERE ID_BRAND = @brand AND ID_GARA = @gara) = 0
		BEGIN
			INSERT BRAND_DETAILS VALUES (@brand, @gara, 0)
		END
		ELSE IF (SELECT COUNT(*) FROM BRAND_DETAILS WHERE ID_BRAND = @brand AND ID_GARA = @gara AND STATUS_DETAILS = 1) > 0
		BEGIN
			UPDATE BRAND_DETAILS
			SET STATUS_DETAILS = 0
			WHERE ID_BRAND = @brand AND ID_GARA = @gara
		END
	END
END
GO

CREATE OR ALTER PROC UPDATE_CAR_BRANDS
@brand CHAR(10), @name NVARCHAR(100)
AS
BEGIN
	UPDATE CAR_BRANDS
	SET NAME_BRAND = @name
	WHERE ID_BRAND =@brand
END
GO

CREATE OR ALTER PROC DELETE_CAR_BRANDS
@brand CHAR(10), @gara CHAR(10)
AS
BEGIN 
	UPDATE BRAND_DETAILS
	SET STATUS_DETAILS = 1
	WHERE ID_BRAND = @brand AND ID_GARA = @gara
	IF (SELECT COUNT(*) FROM BRAND_DETAILS WHERE ID_BRAND = @brand AND STATUS_DETAILS = 0) = 0
	BEGIN
		UPDATE CAR_BRANDS
		SET STATUS_BRAND = 1
		WHERE ID_BRAND = @brand
	END
END
GO

CREATE OR ALTER FUNCTION dbo.GET_MAX_IDCARCOMPONENT()
RETURNS INT
AS
BEGIN
	DECLARE 
		@MAX_IDCARCOMPONENT CHAR(10), 
		@MAX_NUM INT

	IF ((SELECT COUNT(*) FROM GOOD_RECEIVED_NOTES) = 0)
		RETURN 0

	SELECT TOP 1 @MAX_IDCARCOMPONENT = ID_COM
	FROM CAR_COMPONENTS
	ORDER BY CAST(SUBSTRING(ID_COM, 4, LEN(ID_COM))AS INT) DESC;
	
	DECLARE @SUB_MAX CHAR(10) = SUBSTRING(@MAX_IDCARCOMPONENT, 4, LEN(@MAX_IDCARCOMPONENT))

	SET @MAX_NUM = CAST(@SUB_MAX AS INT)
	RETURN @MAX_NUM
END
GO

CREATE OR ALTER PROC INSERT_CARCOMPONENT
@name NVARCHAR(100), @gara CHAR(10), @wage MONEY
AS
BEGIN
	DECLARE @COM CHAR(10)
	IF (SELECT COUNT(*) FROM CAR_COMPONENTS WHERE NAME_COM = @name) = 0
	BEGIN
		DECLARE @MAX_ID SMALLINT
		SET @MAX_ID = dbo.GET_MAX_IDCARCOMPONENT() + 1
		INSERT CAR_COMPONENTS VALUES ('COM' + cast(@MAX_ID as char(7)), @name, 0)
		INSERT COMPONENT_DETAILS (ID_COM, ID_GARA, WAGE,STATUS_DETAILS) VALUES ('COM' + cast(@MAX_ID as char(7)), @gara, @wage, 0)
	END
	ELSE IF (SELECT COUNT(*) FROM CAR_COMPONENTS WHERE NAME_COM = @name AND STATUS_COM = 1) > 0
	BEGIN
		SELECT @COM = ID_COM FROM CAR_COMPONENTS WHERE NAME_COM = @name
		UPDATE CAR_COMPONENTS
		SET STATUS_COM = 0
		WHERE ID_COM = @COM
		IF (SELECT COUNT(*) FROM COMPONENT_DETAILS WHERE ID_COM = @COM AND ID_GARA = @gara) = 0
		BEGIN
			INSERT COMPONENT_DETAILS (ID_COM, ID_GARA, WAGE,STATUS_DETAILS) VALUES (@COM, @gara, @wage, 0)
		END
		ELSE IF (SELECT COUNT(*) FROM COMPONENT_DETAILS WHERE ID_COM = @COM AND ID_GARA = @gara AND STATUS_DETAILS = 1) > 0
		BEGIN
			UPDATE COMPONENT_DETAILS
			SET STATUS_DETAILS = 0
			WHERE ID_COM = @COM AND ID_GARA = @gara
		END
	END
	ELSE
	BEGIN
		SELECT @COM = ID_COM FROM CAR_COMPONENTS WHERE NAME_COM = @name 
		IF (SELECT COUNT(*) FROM COMPONENT_DETAILS WHERE ID_COM = @COM AND ID_GARA = @gara) = 0
		BEGIN
			INSERT COMPONENT_DETAILS (ID_COM, ID_GARA, WAGE,STATUS_DETAILS) VALUES (@COM, @gara, @wage, 0)
		END
		ELSE IF (SELECT COUNT(*) FROM COMPONENT_DETAILS WHERE ID_COM = @COM AND ID_GARA = @gara AND STATUS_DETAILS = 1) > 0
		BEGIN
			UPDATE COMPONENT_DETAILS
			SET STATUS_DETAILS = 0
			WHERE ID_COM = @COM AND ID_GARA = @gara
		END
	END
END
GO

CREATE OR ALTER PROC UPDATE_CARCOMPONENT
@com CHAR(10), @name NVARCHAR(100), @gara CHAR(10), @wage MONEY, @curPrice MONEY
AS
BEGIN
	UPDATE CAR_COMPONENTS 
	SET NAME_COM = @name
	WHERE ID_COM = @com
	UPDATE COMPONENT_DETAILS
	SET WAGE = @wage, CUR_PRICE = @curPrice
	WHERE ID_COM = @com AND ID_GARA = @gara
END
GO

CREATE OR ALTER PROC DELETE_CARCOMPONENT
@com CHAR(10), @gara CHAR(10)
AS
BEGIN
	UPDATE COMPONENT_DETAILS
	SET STATUS_DETAILS = 1
	WHERE ID_COM = @com AND ID_GARA = @gara
	IF (SELECT COUNT(*) FROM COMPONENT_DETAILS WHERE ID_COM = @com AND STATUS_DETAILS = 0) = 0
	BEGIN
		UPDATE CAR_COMPONENTS
		SET STATUS_COM = 1
		WHERE ID_COM = @com
	END
END
GO

CREATE OR ALTER FUNCTION GET_MAX_TOTALPAYMENT(@GARA CHAR(10))
RETURNS DECIMAL
AS
BEGIN
	DECLARE @MAX DECIMAL
	SET @MAX = (SELECT MAX(TOTAL_PAYMENT)
		FROM RECEPTION_FORMS 
		JOIN REPAIR_PAYMENT_BILL ON RECEPTION_FORMS.ID_REC = REPAIR_PAYMENT_BILL.ID_REC
		WHERE ID_GARA = @GARA AND STATUS_REC = 0 AND COMPLETION_DATE ='1/1/1900' )
	IF @MAX IS NULL
	BEGIN
		RETURN 0
	END
	RETURN @MAX
END


CREATE OR ALTER FUNCTION GET_MIN_TOTALPAYMENT(@GARA CHAR(10))
RETURNS DECIMAL
AS
BEGIN
	DECLARE @MIN DECIMAL
	IF (SELECT COUNT(*) FROM RECEPTION_FORMS WHERE STATUS_REC = 0 AND ID_REC NOT IN (SELECT ID_REC FROM REPAIR_PAYMENT_BILL) AND ID_GARA = @GARA) <> 0
	BEGIN
	RETURN 0
	END
	SELECT @MIN = (SELECT MAX(TOTAL_PAYMENT)
		FROM RECEPTION_FORMS 
		JOIN REPAIR_PAYMENT_BILL ON RECEPTION_FORMS.ID_REC = REPAIR_PAYMENT_BILL.ID_REC
		WHERE ID_GARA = @GARA AND STATUS_REC = 0 AND COMPLETION_DATE ='1/1/1900' )
	IF @MIN IS NULL
	BEGIN
		RETURN 0
	END
	RETURN @MIN
END
GO

