-- REPAIR_PAYMENT_DETAILS: 
-- TOTAL_PRICE = COM_QUANTITY * (COM_PRICE + WAGE)(CURRENT PRICE IN CAR_COMPONENTS TABLE)

IF DB_ID('CAR_GARAGE_MANAGEMENT') IS NOT NULL
USE CAR_GARAGE_MANAGEMENT

GO

CREATE OR ALTER TRIGGER TG_REPAIR_PAYMENT_DETAILS_CALCULATE_TOTAL_PRICE_INSERT
ON REPAIR_PAYMENT_DETAILS AFTER INSERT
AS
BEGIN
	DECLARE 
		@RPD_ORDINAL_NUM INT, 
		@ID_BILL CHAR(10),
		@ID_COM CHAR(10),
		@COM_QUANTITY INT

	DECLARE CUR_INS_RPBD CURSOR FOR
		SELECT RPD_ORDINAL_NUM, ID_BILL, ID_COM, COM_QUANTITY 
		FROM INSERTED
	
	OPEN CUR_INS_RPBD 
	FETCH NEXT FROM CUR_INS_RPBD INTO @RPD_ORDINAL_NUM, @ID_BILL, @ID_COM, @COM_QUANTITY

	WHILE @@FETCH_STATUS = 0
	BEGIN
		DECLARE 
			@ID_GARA CHAR(10),
			@COUNT_ROW INT,
			@CUR_PRICE MONEY, 
			@WAGE MONEY

		-- Get ID_GARA to get current price and wage
		SELECT @ID_GARA = ID_GARA 
		FROM REPAIR_PAYMENT_BILL AS BILL 
		JOIN RECEPTION_FORMS AS REC ON REC.ID_REC=BILL.ID_REC 
		WHERE ID_BILL = @ID_BILL

		SELECT @COUNT_ROW = COUNT(*) 
		FROM REPAIR_PAYMENT_DETAILS 
		WHERE ID_BILL= @ID_BILL AND ID_COM = @ID_COM

		SELECT @CUR_PRICE = CUR_PRICE, @WAGE = WAGE 
		FROM COMPONENT_DETAILS
		WHERE ID_COM = @ID_COM AND ID_GARA = @ID_GARA

		-- If the component is not in the bill, insert new row
		IF (@COUNT_ROW = 1)
			BEGIN
				UPDATE REPAIR_PAYMENT_DETAILS 
				SET TOTAL_PRICE = (@CUR_PRICE + @WAGE) * @COM_QUANTITY
				WHERE RPD_ORDINAL_NUM = @RPD_ORDINAL_NUM
			END
		-- If the component is in the bill, update the component quantity and total price
		ELSE
			BEGIN
				UPDATE REPAIR_PAYMENT_DETAILS 
				SET TOTAL_PRICE = TOTAL_PRICE + (@CUR_PRICE + @WAGE) * @COM_QUANTITY,
					COM_QUANTITY = COM_QUANTITY + @COM_QUANTITY
				WHERE ID_BILL= @ID_BILL AND ID_COM = @ID_COM

				DELETE FROM REPAIR_PAYMENT_DETAILS 
				WHERE RPD_ORDINAL_NUM = @RPD_ORDINAL_NUM
			END

		FETCH NEXT FROM CUR_INS_RPBD INTO @RPD_ORDINAL_NUM, @ID_BILL, @ID_COM, @COM_QUANTITY
	END
	
	CLOSE CUR_INS_RPBD
	DEALLOCATE CUR_INS_RPBD
END

GO

CREATE OR ALTER TRIGGER TG_REPAIR_PAYMENT_DETAILS_CALCULATE_TOTAL_PRICE_UPDATE
ON REPAIR_PAYMENT_DETAILS AFTER UPDATE
AS
BEGIN
	IF (UPDATE(COM_QUANTITY))
	BEGIN
		DECLARE 
			@RPD_ORDINAL_NUM INT, 
			@ID_BILL CHAR(10),
			@ID_COM CHAR(10),
			@COM_QUANTITY INT

		DECLARE CUR CURSOR FOR
			SELECT RPD_ORDINAL_NUM, ID_BILL, ID_COM, COM_QUANTITY 
			FROM INSERTED
	
		OPEN CUR 
		FETCH NEXT FROM CUR INTO @RPD_ORDINAL_NUM, @ID_BILL, @ID_COM, @COM_QUANTITY
	  
		WHILE @@FETCH_STATUS = 0
		BEGIN
			DECLARE 
				@ID_GARA CHAR(10),
				@CUR_PRICE MONEY, 
				@WAGE MONEY

			-- Get ID_GARA to get current price and wage
			SELECT @ID_GARA = ID_GARA 
			FROM REPAIR_PAYMENT_BILL AS BILL 
			JOIN RECEPTION_FORMS AS REC ON REC.ID_REC=BILL.ID_REC 
			WHERE ID_BILL = @ID_BILL

			SELECT @CUR_PRICE = CUR_PRICE, @WAGE = WAGE 
			FROM COMPONENT_DETAILS
			WHERE ID_COM = @ID_COM AND ID_GARA = @ID_GARA

			UPDATE REPAIR_PAYMENT_DETAILS 
			SET TOTAL_PRICE = (@CUR_PRICE + @WAGE) * @COM_QUANTITY
			WHERE RPD_ORDINAL_NUM = @RPD_ORDINAL_NUM

			FETCH NEXT FROM CUR INTO @RPD_ORDINAL_NUM, @ID_BILL, @ID_COM, @COM_QUANTITY
		END
		CLOSE CUR
		DEALLOCATE CUR
	END
END

GO

-- REPAIR_PAYMENT_BILL: TOTAL_PAYMENT = SUM(DETAILS)

CREATE OR ALTER TRIGGER TG_CALCULATE_TOTAL_PAYMENT_REPAIR_PAYMENT_BILL_INSERT
ON REPAIR_PAYMENT_DETAILS AFTER INSERT
AS
BEGIN
	DECLARE 
		@ID_BILL CHAR(10),
		@ID_COM CHAR(10),
		@COM_QUANTITY INT

	DECLARE CUR CURSOR FOR
		SELECT ID_BILL, ID_COM, COM_QUANTITY 
		FROM INSERTED
	
	OPEN CUR 
	FETCH NEXT FROM CUR INTO @ID_BILL, @ID_COM, @COM_QUANTITY
	
	WHILE @@FETCH_STATUS = 0
	BEGIN
		DECLARE 
			@ID_GARA CHAR(10),
			@CUR_PRICE MONEY, 
			@WAGE MONEY

		SELECT @ID_GARA = ID_GARA 
		FROM REPAIR_PAYMENT_BILL AS BILL 
		JOIN RECEPTION_FORMS AS REC ON REC.ID_REC = BILL.ID_REC 
		WHERE ID_BILL = @ID_BILL 
		  AND STATUS_BILL = 0 
		  AND STATUS_REC = 0

		SELECT 
			@CUR_PRICE = CUR_PRICE, 
			@WAGE = WAGE 
		FROM COMPONENT_DETAILS
		WHERE ID_COM = @ID_COM AND ID_GARA = @ID_GARA 

		UPDATE REPAIR_PAYMENT_BILL 
		SET TOTAL_PAYMENT = TOTAL_PAYMENT + @COM_QUANTITY * (@CUR_PRICE + @WAGE)
		WHERE ID_BILL = @ID_BILL AND STATUS_BILL = 0

		FETCH NEXT FROM CUR INTO @ID_BILL, @ID_COM, @COM_QUANTITY
	END
	CLOSE CUR
	DEALLOCATE CUR
END

GO

CREATE OR ALTER TRIGGER TG_CALCULATE_TOTAL_PAYMENT_REPAIR_PAYMENT_BILL_UPDATE
ON REPAIR_PAYMENT_DETAILS AFTER UPDATE
AS
BEGIN
	IF (UPDATE(COM_QUANTITY) OR UPDATE(ID_COM))
	BEGIN

		-- INSERT NEW INFORMATION

		DECLARE 
			@ID_BILL CHAR(10),
			@ID_COM CHAR(10),
			@COM_QUANTITY INT

		DECLARE
			@ID_GARA CHAR(10),
			@CUR_PRICE MONEY, 
			@WAGE MONEY

		DECLARE CUR CURSOR FOR
			SELECT ID_BILL, ID_COM, COM_QUANTITY 
			FROM INSERTED
	
		OPEN CUR 
		FETCH NEXT FROM CUR INTO @ID_BILL, @ID_COM, @COM_QUANTITY
	
		WHILE @@FETCH_STATUS = 0
		BEGIN
			SELECT @ID_GARA = ID_GARA 
			FROM REPAIR_PAYMENT_BILL AS BILL 
			JOIN RECEPTION_FORMS AS REC ON REC.ID_REC = BILL.ID_REC 
			WHERE ID_BILL = @ID_BILL 
			  AND STATUS_BILL = 0 
			  AND STATUS_REC = 0

			SELECT 
				@CUR_PRICE = CUR_PRICE, 
				@WAGE = WAGE 
			FROM COMPONENT_DETAILS
			WHERE ID_COM = @ID_COM AND ID_GARA = @ID_GARA 

			UPDATE REPAIR_PAYMENT_BILL 
			SET TOTAL_PAYMENT = TOTAL_PAYMENT + @COM_QUANTITY * (@CUR_PRICE + @WAGE)
			WHERE ID_BILL = @ID_BILL AND STATUS_BILL = 0

			FETCH NEXT FROM CUR INTO @ID_BILL, @ID_COM, @COM_QUANTITY
		END
		CLOSE CUR
		DEALLOCATE CUR
		
		-- DELETE OLD INFORMATION

		DECLARE CUR_OLD CURSOR FOR
			SELECT ID_BILL, ID_COM, COM_QUANTITY FROM DELETED
	
		OPEN CUR_OLD
		FETCH NEXT FROM CUR_OLD INTO @ID_BILL, @ID_COM, @COM_QUANTITY
	
		WHILE (@@FETCH_STATUS = 0)
		BEGIN
			SELECT @ID_GARA = ID_GARA 
			FROM REPAIR_PAYMENT_BILL AS BILL 
			JOIN RECEPTION_FORMS AS REC ON REC.ID_REC = BILL.ID_REC 
			WHERE ID_BILL = @ID_BILL 
			  AND STATUS_BILL = 0 
			  AND STATUS_REC = 0

			SELECT 
				@CUR_PRICE = CUR_PRICE, 
				@WAGE = WAGE 
			FROM COMPONENT_DETAILS
			WHERE ID_COM = @ID_COM AND ID_GARA = @ID_GARA 

			UPDATE REPAIR_PAYMENT_BILL 
			SET TOTAL_PAYMENT = TOTAL_PAYMENT - @COM_QUANTITY * (@CUR_PRICE + @WAGE)
			WHERE ID_BILL = @ID_BILL AND STATUS_BILL = 0

			FETCH NEXT FROM CUR_OLD INTO @ID_BILL, @ID_COM, @COM_QUANTITY
		END
		CLOSE CUR_OLD
		DEALLOCATE CUR_OLD
	END
END

GO

CREATE OR ALTER TRIGGER TG_CALCULATE_TOTAL_PAYMENT_REPAIR_PAYMENT_BILL_DELETE
ON REPAIR_PAYMENT_DETAILS AFTER UPDATE
AS
BEGIN
	IF (UPDATE(STATUS_RPD))
	BEGIN	
		DECLARE 
			@ID_BILL CHAR(10),
			@ID_COM CHAR(10),
			@COM_QUANTITY INT

		DECLARE CUR_OLD CURSOR FOR
			SELECT ID_BILL, ID_COM, COM_QUANTITY FROM INSERTED
			WHERE STATUS_RPD = 1
	
		OPEN CUR_OLD
		FETCH NEXT FROM CUR_OLD INTO @ID_BILL, @ID_COM, @COM_QUANTITY
	
		WHILE (@@FETCH_STATUS = 0)
		BEGIN
			DECLARE
				@ID_GARA CHAR(10),
				@CUR_PRICE MONEY, 
				@WAGE MONEY

			SELECT @ID_GARA = ID_GARA 
			FROM REPAIR_PAYMENT_BILL AS BILL 
			JOIN RECEPTION_FORMS AS REC ON REC.ID_REC = BILL.ID_REC 
			WHERE ID_BILL = @ID_BILL 
			  AND STATUS_BILL = 0 
			  AND STATUS_REC = 0

			SELECT 
				@CUR_PRICE = CUR_PRICE, 
				@WAGE = WAGE 
			FROM COMPONENT_DETAILS
			WHERE ID_COM = @ID_COM AND ID_GARA = @ID_GARA 

			UPDATE REPAIR_PAYMENT_BILL 
			SET TOTAL_PAYMENT = TOTAL_PAYMENT - @COM_QUANTITY * (@CUR_PRICE + @WAGE)
			WHERE ID_BILL = @ID_BILL AND STATUS_BILL = 0

			FETCH NEXT FROM CUR_OLD INTO @ID_BILL, @ID_COM, @COM_QUANTITY
		END
		CLOSE CUR_OLD
		DEALLOCATE CUR_OLD
	END
END

GO

CREATE OR ALTER TRIGGER TG_REPAIR_PAYMENT_DETAILS_COM_QUANTITY_INSERT
ON REPAIR_PAYMENT_DETAILS AFTER INSERT
AS
BEGIN	
	DECLARE 
		@ID_COM CHAR(10),
		@COM_QUANTITY INT,
		@ID_BILL CHAR(10)

	DECLARE CUR CURSOR FOR
		SELECT ID_COM, COM_QUANTITY, ID_BILL 
		FROM INSERTED
		WHERE STATUS_RPD = 0

	OPEN CUR
	FETCH NEXT FROM CUR INTO @ID_COM, @COM_QUANTITY, @ID_BILL

	WHILE (@@FETCH_STATUS = 0)
	BEGIN

		DECLARE @COUNT INT
		DECLARE 
			@ID_GARA CHAR(10), 
			@ID_REC CHAR(10)

		SELECT @ID_REC = ID_REC 
		FROM REPAIR_PAYMENT_BILL 
		WHERE ID_BILL = @ID_BILL
		
		SELECT @ID_GARA=ID_GARA 
		FROM RECEPTION_FORMS 
		WHERE ID_REC = @ID_REC

		SELECT @COUNT=COUNT(*) FROM REPAIR_PAYMENT_DETAILS
		WHERE ID_BILL=@ID_BILL AND ID_COM=@ID_COM AND STATUS_RPD=0

		IF (@COUNT = 1)
		BEGIN
			UPDATE INVENTORY_MANAGEMENT 
			SET COM_QUANTITY = COM_QUANTITY +  @COM_QUANTITY
			WHERE ID_COM = @ID_COM AND ID_GARA = @ID_GARA
		END
		ELSE
		BEGIN

			UPDATE INVENTORY_MANAGEMENT 
			SET COM_QUANTITY = COM_QUANTITY - @COM_QUANTITY
			WHERE ID_COM = @ID_COM AND ID_GARA = @ID_GARA
		END


		FETCH NEXT FROM CUR INTO @ID_COM, @COM_QUANTITY, @ID_BILL
	END

	CLOSE CUR
	DEALLOCATE CUR
END

GO

CREATE OR ALTER TRIGGER TG_REPAIR_PAYMENT_DETAILS_COM_QUANTITY_UPDATE
ON REPAIR_PAYMENT_DETAILS AFTER UPDATE
AS
BEGIN
	IF (UPDATE(ID_COM) OR UPDATE(COM_QUANTITY))
	BEGIN	
		-- INSERT NEW VALUES

		DECLARE 
			@ID_COM CHAR(10),
			@COM_QUANTITY INT, 
			@ID_BILL CHAR(10)

		DECLARE 
			@ID_GARA CHAR(10),
			@ID_REC CHAR(10)

		DECLARE CUR CURSOR FOR
			SELECT ID_COM, COM_QUANTITY, ID_BILL 
			FROM INSERTED
			WHERE STATUS_RPD = 0

		OPEN CUR
		FETCH NEXT FROM CUR INTO @ID_COM, @COM_QUANTITY, @ID_BILL

		WHILE (@@FETCH_STATUS = 0)
		BEGIN
			SELECT @ID_REC = ID_REC 
			FROM REPAIR_PAYMENT_BILL 
			WHERE ID_BILL = @ID_BILL

			SELECT @ID_GARA = ID_GARA 
			FROM RECEPTION_FORMS 
			WHERE ID_REC = @ID_REC

			UPDATE INVENTORY_MANAGEMENT 
			SET COM_QUANTITY = COM_QUANTITY - @COM_QUANTITY
			WHERE ID_COM = @ID_COM AND ID_GARA = @ID_GARA

			FETCH NEXT FROM CUR INTO @ID_COM, @COM_QUANTITY, @ID_BILL
		END

		CLOSE CUR
		DEALLOCATE CUR

		-- DELETE OLD VALUES

		DECLARE CUR CURSOR FOR
			SELECT ID_COM, COM_QUANTITY, ID_BILL 
			FROM DELETED
			WHERE STATUS_RPD = 0

		OPEN CUR 
		FETCH NEXT FROM CUR INTO @ID_COM, @COM_QUANTITY, @ID_BILL

		WHILE (@@FETCH_STATUS = 0)
		BEGIN
			SELECT @ID_REC = ID_REC 
			FROM REPAIR_PAYMENT_BILL 
			WHERE ID_BILL = @ID_BILL

			SELECT @ID_GARA = ID_GARA 
			FROM RECEPTION_FORMS 
			WHERE ID_REC = @ID_REC

			UPDATE INVENTORY_MANAGEMENT 
			SET COM_QUANTITY = COM_QUANTITY + @COM_QUANTITY
			WHERE ID_COM = @ID_COM AND ID_GARA = @ID_GARA

			FETCH NEXT FROM CUR INTO @ID_COM, @COM_QUANTITY, @ID_BILL
		END

		CLOSE CUR
		DEALLOCATE CUR

	END

	IF (UPDATE(STATUS_RPD))
	BEGIN
		DECLARE CUR CURSOR FOR
			SELECT ID_COM, COM_QUANTITY, ID_BILL 
			FROM INSERTED
			WHERE STATUS_RPD = 1

		OPEN CUR 
		FETCH NEXT FROM CUR INTO @ID_COM, @COM_QUANTITY, @ID_BILL

		WHILE (@@FETCH_STATUS = 0)
		BEGIN
			SELECT @ID_REC = ID_REC 
			FROM REPAIR_PAYMENT_BILL 
			WHERE ID_BILL = @ID_BILL

			SELECT @ID_GARA = ID_GARA 
			FROM RECEPTION_FORMS 
			WHERE ID_REC = @ID_REC

			UPDATE INVENTORY_MANAGEMENT 
			SET COM_QUANTITY = COM_QUANTITY - @COM_QUANTITY
			WHERE ID_COM = @ID_COM AND ID_GARA = @ID_GARA

			FETCH NEXT FROM CUR INTO @ID_COM, @COM_QUANTITY, @ID_BILL
		END

		CLOSE CUR
		DEALLOCATE CUR
	END
END

