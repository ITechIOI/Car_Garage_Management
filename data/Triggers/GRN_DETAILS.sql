-- GRN_DETAILS: GRN_TOTAL_PAYMENT = COM_PRICE * COM_QUANTITY
-- UPDATE GRN_TOTAL_PAYMENT AUTOMATICALLY AFTER INSERT AND UPDATE
-- TRIGGER FOR DELETED = TRIGGER FOR UPDATE(STATUS)

IF DB_ID('CAR_GARAGE_MANAGEMENT') IS NOT NULL
USE CAR_GARAGE_MANAGEMENT

GO

CREATE OR ALTER TRIGGER TG_GRN_DETAILS_TOTAL_PAYMENT_INSERT
ON GRN_DETAILS AFTER INSERT
AS
BEGIN
	DECLARE 
		@COM_QUANTITY INT, 
		@COM_PRICE MONEY,
		@GRN_ORDINAL_NUM INT

	DECLARE CUR CURSOR FOR
		SELECT GRN_ORDINAL_NUM, COM_PRICE, COM_QUANTITY 
		FROM INSERTED

	OPEN CUR

	FETCH NEXT FROM CUR INTO @GRN_ORDINAL_NUM, @COM_PRICE, @COM_QUANTITY

	WHILE @@FETCH_STATUS = 0
	BEGIN
		UPDATE GRN_DETAILS 
		SET GRN_TOTAL_PAYMENT = @COM_QUANTITY * @COM_PRICE
		WHERE GRN_ORDINAL_NUM = @GRN_ORDINAL_NUM

		FETCH NEXT FROM CUR INTO @GRN_ORDINAL_NUM, @COM_PRICE, @COM_QUANTITY
	END

	CLOSE CUR
	DEALLOCATE CUR
END

GO

CREATE OR ALTER TRIGGER TG_GRN_DETAILS_TOTAL_PAYMENT_UPDATE
ON GRN_DETAILS AFTER UPDATE
AS
BEGIN
	IF (UPDATE(COM_QUANTITY) OR UPDATE(COM_PRICE))
	BEGIN
		DECLARE 
			@COM_QUANTITY INT, 
			@COM_PRICE MONEY, 
			@GRN_ORDINAL_NUM INT

		DECLARE CUR CURSOR FOR
			SELECT GRN_ORDINAL_NUM, COM_PRICE, COM_QUANTITY 
			FROM INSERTED

		OPEN CUR

		FETCH NEXT FROM CUR INTO @GRN_ORDINAL_NUM, @COM_PRICE, @COM_QUANTITY

		WHILE @@FETCH_STATUS = 0
		BEGIN
			UPDATE GRN_DETAILS 
			SET GRN_TOTAL_PAYMENT = @COM_QUANTITY * @COM_PRICE
			WHERE GRN_ORDINAL_NUM = @GRN_ORDINAL_NUM

			FETCH NEXT FROM CUR INTO @GRN_ORDINAL_NUM, @COM_PRICE, @COM_QUANTITY
		END
	
		CLOSE CUR
		DEALLOCATE CUR
	END
END

GO

-- GOOD_RECEIVED_NOTES: TOTAL_PAYMENT_GRN = SUM(DETAILS)
-- UPDATE TOTAL_PAYMENT_GRN AUTOMATICALLY AFTER INSERT AND UPDATE

CREATE OR ALTER TRIGGER TG_CALCULATE_TOTAL_PAYMENT_GRN_INSERT
ON GRN_DETAILS AFTER INSERT
AS
BEGIN
	DECLARE 
		@COM_QUANTITY INT, 
		@COM_PRICE MONEY, 
		@LOTNUMBER CHAR(10)

	DECLARE CUR CURSOR FOR
		SELECT LOTNUMBER, COM_PRICE, COM_QUANTITY 
		FROM INSERTED

	OPEN CUR
	FETCH NEXT FROM CUR INTO @LOTNUMBER, @COM_PRICE, @COM_QUANTITY

	WHILE @@FETCH_STATUS = 0
	BEGIN
		UPDATE GOOD_RECEIVED_NOTES 
		SET TOTAL_PAYMENT_GRN = TOTAL_PAYMENT_GRN + @COM_PRICE * @COM_QUANTITY
		WHERE LOTNUMBER=@LOTNUMBER

		FETCH NEXT FROM CUR INTO @LOTNUMBER, @COM_PRICE, @COM_QUANTITY
	END

	CLOSE CUR
	DEALLOCATE CUR
END

GO

CREATE OR ALTER TRIGGER TG_CALCULATE_TOTAL_PAYMENT_GRN_UPDATE
ON GRN_DETAILS AFTER UPDATE
AS
BEGIN
	DECLARE 
		@COM_QUANTITY INT, 
		@COM_PRICE MONEY, 
		@LOTNUMBER CHAR(10)

	-- Update
	IF (UPDATE(COM_QUANTITY) OR UPDATE(COM_PRICE))
	BEGIN
		--- INSERT NEW INFORMATION
		DECLARE CUR CURSOR FOR
			SELECT LOTNUMBER, COM_PRICE, COM_QUANTITY 
			FROM INSERTED

		OPEN CUR
		FETCH NEXT FROM CUR INTO @LOTNUMBER, @COM_PRICE, @COM_QUANTITY

		WHILE @@FETCH_STATUS = 0
		BEGIN
			UPDATE GOOD_RECEIVED_NOTES 
			SET TOTAL_PAYMENT_GRN = TOTAL_PAYMENT_GRN + @COM_PRICE*@COM_QUANTITY
			WHERE LOTNUMBER = @LOTNUMBER

			FETCH NEXT FROM CUR INTO @LOTNUMBER, @COM_PRICE, @COM_QUANTITY
		END

		CLOSE CUR
		DEALLOCATE CUR

		--- DELETE OLD INFORMATION

		DECLARE CUR CURSOR FOR
			SELECT LOTNUMBER, COM_PRICE, COM_QUANTITY FROM DELETED

		OPEN CUR
		FETCH NEXT FROM CUR INTO @LOTNUMBER, @COM_PRICE, @COM_QUANTITY

		WHILE @@FETCH_STATUS = 0
		BEGIN
			UPDATE GOOD_RECEIVED_NOTES 
			SET TOTAL_PAYMENT_GRN = TOTAL_PAYMENT_GRN - @COM_PRICE * @COM_QUANTITY
			WHERE LOTNUMBER = @LOTNUMBER

			FETCH NEXT FROM CUR INTO @LOTNUMBER, @COM_PRICE, @COM_QUANTITY
		END

		CLOSE CUR
		DEALLOCATE CUR

	END

	-- Delete
	IF (UPDATE(STATUS_GRN))
	BEGIN
		DECLARE CUR_ST CURSOR FOR
			SELECT LOTNUMBER, COM_PRICE, COM_QUANTITY 
			FROM INSERTED
			WHERE STATUS_GRN = 1

		OPEN CUR_ST
		FETCH NEXT FROM CUR_ST INTO @LOTNUMBER, @COM_PRICE, @COM_QUANTITY

		WHILE @@FETCH_STATUS = 0
		BEGIN
			UPDATE GOOD_RECEIVED_NOTES 
			SET TOTAL_PAYMENT_GRN = TOTAL_PAYMENT_GRN - @COM_PRICE * @COM_QUANTITY
			WHERE LOTNUMBER = @LOTNUMBER

			FETCH NEXT FROM CUR_ST INTO @LOTNUMBER, @COM_PRICE, @COM_QUANTITY
		END

		CLOSE CUR_ST
		DEALLOCATE CUR_ST
	END
END

GO

CREATE OR ALTER TRIGGER TG_GRN_DETAILS_COM_QUANTITY_INSERT
ON GRN_DETAILS AFTER INSERT
AS
BEGIN
	DECLARE
		@LOTNUMBER CHAR(10),
		@ID_COM CHAR(10),
		@COM_QUANTITY INT

	DECLARE CUR CURSOR FOR
		SELECT LOTNUMBER, ID_COM, COM_QUANTITY 
		FROM INSERTED

	OPEN CUR
	FETCH NEXT FROM CUR INTO @LOTNUMBER, @ID_COM, @COM_QUANTITY

	WHILE (@@FETCH_STATUS = 0)
	BEGIN
		DECLARE @ID_GARA CHAR(10)

		SELECT @ID_GARA = ID_GARA 
		FROM GOOD_RECEIVED_NOTES
		WHERE LOTNUMBER = @LOTNUMBER 

		UPDATE INVENTORY_MANAGEMENT 
		SET COM_QUANTITY = COM_QUANTITY + @COM_QUANTITY 
		WHERE ID_COM = @ID_COM 
			AND ID_GARA = @ID_GARA

		FETCH NEXT FROM CUR INTO @LOTNUMBER, @ID_COM, @COM_QUANTITY
	END

	CLOSE CUR
	DEALLOCATE CUR
END

GO

-- NOT ALLOW TO UPDATE LOTNUMBER IN GRN_DETAILS
CREATE OR ALTER TRIGGER TG_GRN_DETAILS_COM_QUANTITY_UPDATE
ON GRN_DETAILS AFTER UPDATE
AS
BEGIN
	DECLARE 
		@LOTNUMBER CHAR(10),
		@ID_COM CHAR(10),
		@COM_QUANTITY INT

	DECLARE @ID_GARA CHAR(10)

	IF (UPDATE(ID_COM) OR UPDATE(COM_QUANTITY))
	BEGIN
		
		--- INSERT NEW INFORMATION

		DECLARE CUR CURSOR FOR
			SELECT LOTNUMBER, ID_COM, COM_QUANTITY 
			FROM INSERTED
			WHERE STATUS_GRN = 0

		OPEN CUR
		FETCH NEXT FROM CUR INTO @LOTNUMBER, @ID_COM, @COM_QUANTITY

		WHILE (@@FETCH_STATUS = 0)
		BEGIN
			SELECT @ID_GARA = ID_GARA 
			FROM GOOD_RECEIVED_NOTES
			WHERE LOTNUMBER = @LOTNUMBER

			UPDATE INVENTORY_MANAGEMENT 
			SET COM_QUANTITY = COM_QUANTITY + @COM_QUANTITY
			WHERE ID_COM = @ID_COM AND ID_GARA = @ID_GARA

			FETCH NEXT FROM CUR INTO @LOTNUMBER, @ID_COM, @COM_QUANTITY
		END

		CLOSE CUR
		DEALLOCATE CUR

		-- DELETE OLD INFORMATION
		DECLARE CUR CURSOR FOR
			SELECT LOTNUMBER, ID_COM, COM_QUANTITY 
			FROM DELETED
			WHERE STATUS_GRN = 0

		OPEN CUR
		FETCH NEXT FROM CUR INTO @LOTNUMBER, @ID_COM, @COM_QUANTITY

		WHILE (@@FETCH_STATUS = 0)
		BEGIN
			SELECT @ID_GARA = ID_GARA
			FROM GOOD_RECEIVED_NOTES 
			WHERE LOTNUMBER = @LOTNUMBER

			UPDATE INVENTORY_MANAGEMENT 
			SET COM_QUANTITY = COM_QUANTITY - @COM_QUANTITY
			WHERE ID_COM = @ID_COM AND ID_GARA = @ID_GARA

			FETCH NEXT FROM CUR INTO @LOTNUMBER, @ID_COM, @COM_QUANTITY
		END

		CLOSE CUR
		DEALLOCATE CUR
	END

	---- DELETE ROW <=> SET STATUS = 1
	---- NOT ALLOW TO DELETE GRN_DETAILS ROW

	IF (UPDATE(STATUS_GRN))
	BEGIN
		DECLARE CUR CURSOR FOR
			SELECT LOTNUMBER, ID_COM, COM_QUANTITY 
			FROM INSERTED
			WHERE STATUS_GRN = 1

		OPEN CUR
		FETCH NEXT FROM CUR INTO @LOTNUMBER, @ID_COM, @COM_QUANTITY

		WHILE (@@FETCH_STATUS = 0)
		BEGIN
			SELECT @ID_GARA = ID_GARA 
			FROM GOOD_RECEIVED_NOTES 
			WHERE LOTNUMBER = @LOTNUMBER

			UPDATE INVENTORY_MANAGEMENT 
			SET COM_QUANTITY = COM_QUANTITY - @COM_QUANTITY
			WHERE ID_COM = @ID_COM AND ID_GARA = @ID_GARA

			FETCH NEXT FROM CUR INTO @LOTNUMBER, @ID_COM, @COM_QUANTITY
		END

		CLOSE CUR
		DEALLOCATE CUR
	END
END

GO

CREATE OR ALTER TRIGGER TG_UPDATE_CURRENT_PRICE_INSERT
ON GRN_DETAILS AFTER INSERT
AS
BEGIN
	DECLARE 
		@LOTNUMBER CHAR(10), 
		@ID_COM CHAR(10), 
		@COM_PRICE MONEY

	DECLARE CUR CURSOR FOR
		SELECT LOTNUMBER, ID_COM, COM_PRICE 
		FROM INSERTED
		WHERE STATUS_GRN = 0

	OPEN CUR
	FETCH NEXT FROM CUR INTO @LOTNUMBER, @ID_COM, @COM_PRICE

	WHILE (@@FETCH_STATUS = 0)
	BEGIN
		 DECLARE @ID_GARA CHAR(10)

		 SELECT @ID_GARA = ID_GARA 
		 FROM GOOD_RECEIVED_NOTES 
		 WHERE LOTNUMBER = @LOTNUMBER

		 UPDATE COMPONENT_DETAILS 
		 SET CUR_PRICE = @COM_PRICE
		 WHERE ID_COM = @ID_COM 
			AND ID_GARA = @ID_GARA
			AND STATUS_DETAILS = 0

		FETCH NEXT FROM CUR INTO @LOTNUMBER, @ID_COM, @COM_PRICE
	END
	
	CLOSE CUR
	DEALLOCATE CUR

END

GO

CREATE OR ALTER TRIGGER TG_UPDATE_CURRENT_PRICE_UPDATE
ON GRN_DETAILS AFTER UPDATE
AS
BEGIN
	IF (UPDATE(ID_COM) OR UPDATE(COM_PRICE))
	BEGIN
		DECLARE 
			@LOTNUMBER CHAR(10), 
			@ID_COM CHAR(10), 
			@COM_PRICE MONEY

		DECLARE CUR CURSOR FOR
			SELECT LOTNUMBER, ID_COM, COM_PRICE 
			FROM INSERTED
			WHERE STATUS_GRN = 0

		OPEN CUR
		FETCH NEXT FROM CUR INTO @LOTNUMBER, @ID_COM, @COM_PRICE

		WHILE (@@FETCH_STATUS = 0)
		BEGIN
			 DECLARE @ID_GARA CHAR(10)

			 SELECT @ID_GARA = ID_GARA 
			 FROM GOOD_RECEIVED_NOTES 
			 WHERE LOTNUMBER = @LOTNUMBER

			 UPDATE COMPONENT_DETAILS 
			 SET CUR_PRICE = @COM_PRICE
			 WHERE ID_COM = @ID_COM 
				AND ID_GARA = @ID_GARA
				AND STATUS_DETAILS = 0

			FETCH NEXT FROM CUR INTO @LOTNUMBER, @ID_COM, @COM_PRICE
		END
	
		CLOSE CUR
		DEALLOCATE CUR
	END
END
