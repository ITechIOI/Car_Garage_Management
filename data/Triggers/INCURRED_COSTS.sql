-- INCURRED_COSTS: INCURRED_COSTS_TTPRICE = COMQUANTITY * CUR_PRICE

IF DB_ID('CAR_GARAGE_MANAGEMENT') IS NOT NULL
USE CAR_GARAGE_MANAGEMENT

GO

CREATE OR ALTER TRIGGER TG_INCURRED_COSTS_TTPRICE_INSERT
ON INCURRED_COSTS AFTER INSERT
AS
BEGIN
	DECLARE 
		@CO_ORDINAL_NUM INT, 
		@ID_GARA CHAR(10),
		@ID_COM CHAR(10), 
		@COM_QUANTITY MONEY

	DECLARE CUR_INCUR_INS CURSOR FOR
		SELECT CO_ORDINAL_NUM, ID_GARA, ID_COM, COM_QUANTITY
		FROM INSERTED 
		WHERE STATUS_IC = 0

	OPEN CUR_INCUR_INS
	FETCH NEXT FROM CUR_INCUR_INS INTO @CO_ORDINAL_NUM, @ID_GARA, @ID_COM, @COM_QUANTITY

	WHILE (@@FETCH_STATUS = 0)
	BEGIN
		DECLARE @CUR_PRICE MONEY

		SELECT @CUR_PRICE = CUR_PRICE 
		FROM COMPONENT_DETAILS 
		WHERE ID_COM = @ID_COM AND ID_GARA = @ID_GARA

		UPDATE INCURRED_COSTS 
		SET INCURRED_COSTS_TTPRICE = @COM_QUANTITY * @CUR_PRICE
		WHERE CO_ORDINAL_NUM = @CO_ORDINAL_NUM

		FETCH NEXT FROM CUR_INCUR_INS INTO @CO_ORDINAL_NUM, @ID_GARA, @ID_COM, @COM_QUANTITY
	END

	CLOSE CUR_INCUR_INS
	DEALLOCATE CUR_INCUR_INS
END

GO

CREATE OR ALTER TRIGGER TG_INCURRED_COSTS_TTPRICE_UPDATE
ON INCURRED_COSTS AFTER UPDATE
AS
BEGIN
	IF (UPDATE(COM_QUANTITY) OR UPDATE(ID_COM) OR UPDATE(ID_GARA))
	BEGIN
		DECLARE 
			@CO_ORDINAL_NUM INT, 
			@ID_GARA CHAR(10),
			@ID_COM CHAR(10), 
			@COM_QUANTITY MONEY

		DECLARE CUR_INCUR_INS CURSOR FOR
			SELECT CO_ORDINAL_NUM, ID_GARA, ID_COM, COM_QUANTITY
			FROM INSERTED 
			WHERE STATUS_IC = 0

		OPEN CUR_INCUR_INS
		FETCH NEXT FROM CUR_INCUR_INS INTO @CO_ORDINAL_NUM, @ID_GARA, @ID_COM, @COM_QUANTITY

		WHILE (@@FETCH_STATUS = 0)
		BEGIN
			DECLARE @CUR_PRICE MONEY

			SELECT @CUR_PRICE = CUR_PRICE 
			FROM COMPONENT_DETAILS 
			WHERE ID_COM = @ID_COM AND ID_GARA = @ID_GARA

			UPDATE INCURRED_COSTS 
			SET INCURRED_COSTS_TTPRICE = @COM_QUANTITY * @CUR_PRICE
			WHERE CO_ORDINAL_NUM = @CO_ORDINAL_NUM

			FETCH NEXT FROM CUR_INCUR_INS INTO @CO_ORDINAL_NUM, @ID_GARA, @ID_COM, @COM_QUANTITY
		END

		CLOSE CUR_INCUR_INS
		DEALLOCATE CUR_INCUR_INS
	END
END

GO

CREATE OR ALTER TRIGGER TG_INCURRED_COSTS_TTPRICE_DELETE
ON INCURRED_COSTS AFTER UPDATE
AS
BEGIN
	IF (UPDATE(STATUS_IC))
	BEGIN
		DECLARE @CO_ORDINAL_NUM INT

		DECLARE CUR CURSOR FOR
			SELECT CO_ORDINAL_NUM 
			FROM INSERTED 
			WHERE STATUS_IC = 1

		OPEN CUR
		FETCH NEXT FROM CUR INTO @CO_ORDINAL_NUM

		WHILE (@@FETCH_STATUS = 0)
		BEGIN
			UPDATE INCURRED_COSTS 
			SET INCURRED_COSTS_TTPRICE = 0
			WHERE CO_ORDINAL_NUM = @CO_ORDINAL_NUM

			FETCH NEXT FROM CUR INTO @CO_ORDINAL_NUM
		END

		CLOSE CUR
		DEALLOCATE CUR
	END
END

GO

CREATE OR ALTER TRIGGER TG_INCURRED_COSTS_COM_QUANTITY_INSERT
ON INCURRED_COSTS AFTER INSERT
AS
BEGIN
	DECLARE 
		@ID_COM CHAR(10),
		@COM_QUANTITY INT,
		@ID_GARA CHAR(10)

	DECLARE CUR CURSOR FOR
		SELECT ID_GARA, ID_COM, COM_QUANTITY 
		FROM INSERTED
		WHERE STATUS_IC = 0

	OPEN CUR
	FETCH NEXT FROM CUR INTO @ID_GARA, @ID_COM, @COM_QUANTITY

	WHILE (@@FETCH_STATUS = 0)
	BEGIN
		UPDATE INVENTORY_MANAGEMENT 
		SET COM_QUANTITY = COM_QUANTITY - @COM_QUANTITY
		WHERE ID_COM = @ID_COM AND ID_GARA = @ID_GARA

		FETCH NEXT FROM CUR INTO @ID_GARA, @ID_COM, @COM_QUANTITY
	END

	CLOSE CUR
	DEALLOCATE CUR
END

GO

CREATE OR ALTER TRIGGER TG_INCURRED_COSTS_COM_QUANTITY_UPDATE
ON INCURRED_COSTS AFTER UPDATE
AS
BEGIN
	DECLARE 
		@ID_COM CHAR(10), 
		@COM_QUANTITY INT,
		@ID_GARA CHAR(10)

	IF (UPDATE(ID_COM) OR UPDATE(COM_QUANTITY))
	BEGIN
		-- INSERT NEW INFORMATION

		DECLARE CUR CURSOR FOR
			SELECT ID_GARA, ID_COM, COM_QUANTITY 
			FROM INSERTED
			WHERE STATUS_IC = 0

		OPEN CUR
		FETCH NEXT FROM CUR INTO @ID_GARA, @ID_COM, @COM_QUANTITY

		WHILE (@@FETCH_STATUS = 0)
		BEGIN
			UPDATE INVENTORY_MANAGEMENT 
			SET COM_QUANTITY = COM_QUANTITY - @COM_QUANTITY
			WHERE ID_COM = @ID_COM AND ID_GARA = @ID_GARA

			FETCH NEXT FROM CUR INTO @ID_GARA, @ID_COM, @COM_QUANTITY
		END

		CLOSE CUR
		DEALLOCATE CUR

		-- DELETE OLD INFORMATION

		DECLARE CUR CURSOR FOR
			SELECT ID_GARA, ID_COM, COM_QUANTITY 
			FROM DELETED
			WHERE STATUS_IC = 0

		OPEN CUR
		FETCH NEXT FROM CUR INTO @ID_GARA, @ID_COM, @COM_QUANTITY

		WHILE (@@FETCH_STATUS = 0)
		BEGIN
			UPDATE INVENTORY_MANAGEMENT 
			SET COM_QUANTITY = COM_QUANTITY + @COM_QUANTITY
			WHERE ID_COM = @ID_COM AND ID_GARA = @ID_GARA

			FETCH NEXT FROM CUR INTO @ID_GARA, @ID_COM, @COM_QUANTITY
		END

		CLOSE CUR
		DEALLOCATE CUR
	END

	-- DELETE ROW
	IF (UPDATE(STATUS_IC))
	BEGIN
		DECLARE CUR CURSOR FOR
			SELECT ID_GARA, ID_COM, COM_QUANTITY 
			FROM INSERTED
			WHERE STATUS_IC = 1

		OPEN CUR
		FETCH NEXT FROM CUR INTO @ID_GARA, @ID_COM, @COM_QUANTITY

		WHILE (@@FETCH_STATUS = 0)
		BEGIN
			UPDATE INVENTORY_MANAGEMENT 
			SET COM_QUANTITY = COM_QUANTITY + @COM_QUANTITY
			WHERE ID_COM = @ID_COM AND ID_GARA = @ID_GARA

			FETCH NEXT FROM CUR INTO @ID_GARA, @ID_COM, @COM_QUANTITY
		END

		CLOSE CUR
		DEALLOCATE CUR
	END
END
